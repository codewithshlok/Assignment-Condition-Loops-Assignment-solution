Q3.  What are loops, and what do we need them? Explain different types of loops with their syntax and
examples.
Answer - Loops in programming are constructs that allow you to repeatedly execute a block of code as long as a specified condition is true. They are essential for automating repetitive tasks and iterating over collections of data.

JavaScript supports several types of loops:

1. for loop: Executes a block of code a specified number of times.

2. while loop: Executes a block of code as long as a specified condition is true.

3. do-while loop: Similar to a while loop, but it always executes the block of code at least once, then repeats it as long as the specified condition is true.

4. for...in loop: Iterates over the enumerable properties of an object.

5. for...of loop: Iterates over iterable objects like arrays, strings, maps, sets, etc.


Here's the syntax for each type of loop in JavaScript:

1. for loop : 

for (initialization; condition; increment/decrement) {
    // Code block to execute
}

2. while loop : 

while (condition) {
    // Code block to execute
}

3. do while loop:

do {
    // Code block to execute
} while (condition);


4. for in loop : 

for (variable in object) {
    // Code block to execute
}

5. for of loop : 

for (variable of iterable) {
    // Code block to execute
}


Examples : 

1. for loop :
 for (let i=0, i<10, i++){
    console.log(i)
 }

2. while loop : 

let i = 0;
while(i<10){
    console.log(i)
    i++;
}

3. do while loop:

let i =0;
do{
   console.log(i) 
   i++;
}while(i<10)

5. for...in loop (for iterating over object properties):

const person = { name: 'John', age: 30, city: 'New York' };
for (let key in person) {
    console.log(key + ": " + person[key]);
}

6. for...of loop (for iterating over iterable objects):

const colors = ['red', 'green', 'blue'];
for (let color of colors) {
    console.log(color);
}

